I"(
<p>In this post, I am going to share you about a utility in Linux for scheduling your scripts. I will be showing how you can use a very simple and easy utility called ‘at’. First of all, if its not already install you can install it by running:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>yum <span class="nb">install </span>at <span class="nt">-y</span>
</code></pre></div></div>
<p>Now that at is installed. You can start the atd daemon:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>yum start atd
</code></pre></div></div>
<!--more-->
<p>We are all set we can now schedule tasks. For our case we will use an example script ‘example.sh’ which will broadcast a message to the wall:
echo “Script is running” | wall
We will schedule the script to run now:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>at <span class="nt">-f</span> example.sh now
</code></pre></div></div>
<p>We can run at a specific time as:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>at <span class="nt">-f</span> example.sh 10:30
</code></pre></div></div>
<p>We can view the scheduled tasks by running atq command:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>atq
</code></pre></div></div>

<p>To remove a task from the at queue, you can run ‘at -d task_number’. For example to remove task with id 4 we would run :</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>at <span class="nt">-d</span> 4
</code></pre></div></div>
<p>By default the queue name of tasks added with ‘at’ command is a. You can set a new queue name with -q option. For example</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>at <span class="nt">-q</span> c <span class="nt">-f</span> example.sh 12:12
</code></pre></div></div>
<p>Allowed names for queue are a-z and A-Z.
In the upcoming posts, I will be writing about scheduling with ‘cron’. So stay tuned. 🙂</p>
:ET